color = "black",
shape = 15
) +
guides(fill = guide_legend(override.aes = list(shape = NA)))
illness_violin <-
ggplot(illness_ggplot, aes(Treatment, Illness, fill = Treatment)) +
geom_violin() +
scale_y_log10() +
theme(axis.text.x = element_text(
face = "bold",
color = "black",
size = 10,
angle = 45
)) +
labs(x = c(expression(bold(
"Treatement Process" ^ a
))),
y = expression(bold( ~ log[10] ~ of ~ Exiting ~ Risk ~ of ~
Illness))) +
stat_summary(
fun.y = median,
geom = "point",
size = 2.5,
color = "white"
) +
stat_summary(
fun.y = mean,
geom = "point",
size = 2,
color = "black",
shape = 15
) +
guides(fill = guide_legend(override.aes = list(shape = NA)))
plots <- arrangeGrob(
#doses_violin,
#doses_box,
risks_violin,
risks_box,
illness_violin,
illness_box, nrow=2, ncol=2, top=orgName)
return(plots)
}
res <- qmra.MonteCarlo_df(d,
maxiter=maxiter,
disinfectName1='ozone',
disinfectName2 = 'uv',
disinfectName3 = 'chlorine',
ingest = list(min=0.5, mean=1, max=2.5),
efficiency = list(
coag=1,
disinfect1=1,
filt=1,
bioFilt=1,
disinfect2=1,
disinfect3=1
)
)
res <- qmra.MonteCarlo(d,
maxiter=maxiter,
disinfectName1='ozone',
disinfectName2 = 'uv',
disinfectName3 = 'chlorine',
ingest = list(min=0.5, mean=1, max=2.5),
efficiency = list(
coag=1,
disinfect1=1,
filt=1,
bioFilt=1,
disinfect2=1,
disinfect3=1
)
)
res
res <- qmra.MonteCarlo(d,
maxiter=100000,
disinfectName1='ozone',
disinfectName2 = 'uv',
disinfectName3 = 'chlorine',
ingest = list(min=0.5, mean=1, max=2.5),
efficiency = list(
coag=1,
disinfect1=1,
filt=1,
bioFilt=1,
disinfect2=1,
disinfect3=1
)
)
res <- qmra.MonteCarlo(d,
maxiter=1000,
disinfectName1='ozone',
disinfectName2 = 'uv',
disinfectName3 = 'chlorine',
ingest = list(min=0.5, mean=1, max=2.5),
efficiency = list(
coag=1,
disinfect1=1,
filt=1,
bioFilt=1,
disinfect2=1,
disinfect3=1
)
)
source('./monte_carlo.r')
maxiter <- 1000
defaultData <- read.csv('default_MPN.csv', header=TRUE, col.names = c('x'))
cryptoData <- defaultData
giardiaData <- defaultData
rotaData <- defaultData
campyData <- defaultData
eColiData <- defaultData
getDataInput <- function(){
return(data.frame(
crypto = cryptoData$x,
giardia = giardiaData$x,
rota = rotaData$x,
campy = campyData$x,
eColi = eColiData$x
))
}
mean_crypto_final_Ill <- 2.693535e-08
mean_giardia_final_ill <- 5.255395e-11
mean_rota_final_ill <- 1.981222e-10
mean_campy_final_ill <-  5.061135e-17
mean_ecoli_final_ill <- 5.033174e-17
d <- getDataInput()
res <- qmra.MonteCarlo(d,
maxiter=maxiter,
disinfectName1='ozone',
disinfectName2 = 'uv',
disinfectName3 = 'chlorine',
ingest = list(min=0.5, mean=1, max=2.5),
efficiency = list(
coag=1,
disinfect1=1,
filt=1,
bioFilt=1,
disinfect2=1,
disinfect3=1
)
)
source('./monte_carlo.r')
maxiter <- 10000
defaultData <- read.csv('default_MPN.csv', header=TRUE, col.names = c('x'))
cryptoData <- defaultData
giardiaData <- defaultData
rotaData <- defaultData
campyData <- defaultData
eColiData <- defaultData
getDataInput <- function(){
return(data.frame(
crypto = cryptoData$x,
giardia = giardiaData$x,
rota = rotaData$x,
campy = campyData$x,
eColi = eColiData$x
))
}
mean_crypto_final_Ill <- 2.693535e-08
mean_giardia_final_ill <- 5.255395e-11
mean_rota_final_ill <- 1.981222e-10
mean_campy_final_ill <-  5.061135e-17
mean_ecoli_final_ill <- 5.033174e-17
d <- getDataInput()
res <- qmra.MonteCarlo(d,
maxiter=maxiter,
disinfectName1='ozone',
disinfectName2 = 'uv',
disinfectName3 = 'chlorine',
ingest = list(min=0.5, mean=1, max=2.5),
efficiency = list(
coag=1,
disinfect1=1,
filt=1,
bioFilt=1,
disinfect2=1,
disinfect3=1
)
)
source("./mcdf.r")
source('./monte_carlo.r')
maxiter <- 10000
defaultData <- read.csv('default_MPN.csv', header=TRUE, col.names = c('x'))
cryptoData <- defaultData
giardiaData <- defaultData
rotaData <- defaultData
campyData <- defaultData
eColiData <- defaultData
getDataInput <- function(){
return(data.frame(
crypto = cryptoData$x,
giardia = giardiaData$x,
rota = rotaData$x,
campy = campyData$x,
eColi = eColiData$x
))
}
mean_crypto_final_Ill <- 2.693535e-08
mean_giardia_final_ill <- 5.255395e-11
mean_rota_final_ill <- 1.981222e-10
mean_campy_final_ill <-  5.061135e-17
mean_ecoli_final_ill <- 5.033174e-17
d <- getDataInput()
res <- qmra.MonteCarlo(d,
maxiter=maxiter,
disinfectName1='ozone',
disinfectName2 = 'uv',
disinfectName3 = 'chlorine',
ingest = list(min=0.5, mean=1, max=2.5),
efficiency = list(
coag=1,
disinfect1=1,
filt=1,
bioFilt=1,
disinfect2=1,
disinfect3=1
)
)
source('./monte_carlo.r')
maxiter <- 1000
defaultData <- read.csv('default_MPN.csv', header=TRUE, col.names = c('x'))
cryptoData <- defaultData
giardiaData <- defaultData
rotaData <- defaultData
campyData <- defaultData
eColiData <- defaultData
getDataInput <- function(){
return(data.frame(
crypto = cryptoData$x,
giardia = giardiaData$x,
rota = rotaData$x,
campy = campyData$x,
eColi = eColiData$x
))
}
mean_crypto_final_Ill <- 2.693535e-08
mean_giardia_final_ill <- 5.255395e-11
mean_rota_final_ill <- 1.981222e-10
mean_campy_final_ill <-  5.061135e-17
mean_ecoli_final_ill <- 5.033174e-17
d <- getDataInput()
res <- qmra.MonteCarlo(d,
maxiter=maxiter,
disinfectName1='ozone',
disinfectName2 = 'uv',
disinfectName3 = 'chlorine',
ingest = list(min=0.5, mean=1, max=2.5),
efficiency = list(
coag=1,
disinfect1=1,
filt=1,
bioFilt=1,
disinfect2=1,
disinfect3=1
)
)
# Header ------------------------------------------------------------------
#==============================================================================================================|
# Treatment_Distributions.R is an R (www.r-project.org) source code that randomly samples from distributions   |
# for specified treatment processes and pathogens.                                                             |
# The code is broken into sections due to length to allow for easier navigation                                |
#                                                                                                              |
# Coding and model redevelopment performed by Mark H. Weir Ph.D. of CAMRA Consultants LLC, NSF International   |
# and College of Public Health and College of Engineering, The Ohio State University                           |
#                                                                                                              |
# All use and reproduction rights are reserved by Mark H. Weir Ph.D. and CAMRA Consultants LLC.                |
# CAMRA Consultants LLC. weirmarkh@gmail.com, camraconsultants@gmail.com; weir.95@osu.edu                      |
#==============================================================================================================|
source("TriRand.r")
treatmentDist <- function(maxiter){
organisms <- c('crypto','giardia','rota','campy','eColi')
# Make the matrices -------------
coag <- matrix(NaN, nrow=maxiter, ncol=length(organisms), dimnames = list(NULL, organisms))
filt_nc <- matrix(NaN, nrow=maxiter, ncol=length(organisms), dimnames = list(NULL, organisms))
filt_inline <- matrix(NaN, nrow=maxiter, ncol=length(organisms), dimnames = list(NULL, organisms))
filt_coag <- matrix(NaN, nrow=maxiter, ncol=length(organisms), dimnames = list(NULL, organisms))
filt_sand <- matrix(NaN, nrow=maxiter, ncol=length(organisms), dimnames = list(NULL, organisms))
filt_micro <- matrix(NaN, nrow=maxiter, ncol=length(organisms), dimnames = list(NULL, organisms))
filt_ultra <- matrix(NaN, nrow=maxiter, ncol=length(organisms), dimnames = list(NULL, organisms))
bio_filt <- matrix(NaN, nrow=maxiter, ncol=length(organisms), dimnames = list(NULL, organisms))
chlorine <- matrix(NaN,nrow=maxiter, ncol=length(organisms), dimnames = list(NULL, organisms))
chloromines <- matrix(NaN, nrow=maxiter, ncol=length(organisms), dimnames = list(NULL, organisms))
ozone <- matrix(NaN, nrow=maxiter, ncol=length(organisms), dimnames = list(NULL, organisms))
chlorine_dioxide <- matrix(NaN,nrow=maxiter, ncol=length(organisms), dimnames = list(NULL, organisms))
uv <- matrix(NaN, nrow=maxiter, ncol=length(organisms), dimnames = list(NULL, organisms))
# Simulate the reductions ---------------------
coag[,'crypto'] <- rtri(maxiter, 0.46,1.8,3.78);
coag[,'giardia'] <- rtri(maxiter, 0.48,1.3,0.48)
coag[,'rota'] <- rtri(maxiter, 0.34,1.7,4.06);
coag[,'campy'] <- rtri(maxiter, 0.6,1.4,3.7);
coag[,'eColi'] <- rtri(maxiter, 0.6,1.4,3.7)
filt_nc[,'crypto'] <- rtri(maxiter, 0.16,1.1,2.22);
filt_nc[,'giardia'] <- rtri(maxiter, 0.07,1.0,2.39);
filt_nc[,'rota'] <- rtri(maxiter, 0.11,0.6,1.59);
filt_nc[,'campy'] <- rtri(maxiter, 0.2,0.4,1);
filt_nc[,'eColi'] <- rtri(maxiter, 0.2,0.4,1)
filt_inline[,'crypto'] <- rtri(maxiter, 0.89,2.9,5.255);
filt_inline[,'giardia'] <- rtri(maxiter, 1.3,3,4.6);
filt_inline[,'rota'] <- rtri(maxiter, 0.16,0.3,1.5);
filt_inline[,'campy'] <- rtri(maxiter, 0.86,1.4,1.95);
filt_inline[,'eColi'] <- rtri(maxiter, 0.86,1.4,1.95)
filt_coag[,'crypto'] <- rtri(maxiter, 1.055,2.1,4.565);
filt_coag[,'giardia'] <- rtri(maxiter, 0.72,1.7,3.75);
filt_coag[,'rota'] <- rtri(maxiter, 0.265,0.8,2.11);
filt_coag[,'campy'] <- rtri(maxiter, 0.44,0.9,1.42);
filt_coag[,'eColi'] <- rtri(maxiter, 0.44,0.9,1.42)
filt_sand[,'crypto'] <- rtri(maxiter, 3.15,5,6.3);
filt_sand[,'giardia'] <- rtri(maxiter, 4.07,4.7,5.87);
filt_sand[,'campy'] <- rtri(maxiter, 0.66,2.1,3.7);
filt_sand[,'rota'] <- rtri(maxiter, 1.288,2.4,4.64);
filt_sand[,'eColi'] <- rtri(maxiter, 1.288,2.4,4.64)
filt_micro[,'crypto'] <- rtri(maxiter, 4.7,6.3,6.86);
filt_micro[,'giardia'] <- rtri(maxiter, 5.95,6.8,6.975);
filt_micro[,'campy'] <- rtri(maxiter, 0.1,0.5,2.4);
filt_micro[,'rota'] <- rtri(maxiter, 2.86,3.9,6.66);
filt_micro[,'eColi'] <- rtri(maxiter, 2.86,3.9,6.66)
filt_ultra[,'crypto'] <- rtri(maxiter, 5.74,6.4,6.96);
filt_ultra[,'giardia'] <- rtri(maxiter, 5.04,6.55,6.965);
filt_ultra[,'rota'] <- rtri(maxiter, 2.06,4.3,5.71);
filt_ultra[,'campy'] <- rtri(maxiter, 8,8,8);
filt_ultra[,'eColi'] <- rtri(maxiter, 8,8,8)
# Disinfection are point estimates ---------
chlorine[,'crypto'] <- runif(maxiter,0.02,0.02);
chlorine[,'giardia'] <- runif(maxiter,1.65,1.65);
chlorine[,'rota'] <- runif(maxiter,8,8);
chlorine[,'campy'] <- runif(maxiter,8,8)
chlorine[,'eColi'] <- runif(maxiter,8,8)
chloromines[,'crypto'] <- runif(maxiter,0,0);
chloromines[,'giardia'] <- runif(maxiter,0.09,0.09)
chloromines[,'rota'] <- runif(maxiter,0.7,0.7);
chloromines[,'campy'] <- runif(maxiter,4.72,4.72)
chloromines[,'eColi'] <- runif(maxiter,1.36,1.36)
ozone[,'crypto'] <- runif(maxiter,3.01,3.01);
ozone[,'giardia'] <- runif(maxiter,4,4)
ozone[,'rota'] <- runif(maxiter,4,4);
ozone[,'campy'] <- runif(maxiter,8,8)
ozone[,'eColi'] <- runif(maxiter,8,8)
chlorine_dioxide[,'crypto'] <- runif(maxiter,0.2,0.2);
chlorine_dioxide[,'giardia'] <- runif(maxiter,3.47,3.47);
chlorine_dioxide[,'rota'] <- runif(maxiter,8,8);
chlorine_dioxide[,'campy'] <- runif(maxiter,4,4)
chlorine_dioxide[,'eColi'] <- runif(maxiter,4,4)
uv[,'crypto'] <- runif(maxiter, 0.966, 0.966)
uv[,'giardia'] <- runif(maxiter, 0.966, 0.966)
uv[,'rota'] <- runif(maxiter, 0.966, 0.966)
uv[,'campy'] <- runif(maxiter, 0.966, 0.966)
uv[,'eColi'] <- runif(maxiter, 0.966, 0.966)
# Biofilter is a point estimate
bio_filt[,'crypto'] <- runif(maxiter, 0.301, 0.301)
bio_filt[,'giardia'] <- runif(maxiter, 0.301, 0.301)
bio_filt[,'rota'] <- runif(maxiter, 0.301, 0.301)
bio_filt[,'campy'] <- runif(maxiter, 0.301, 0.301)
bio_filt[,'eColi'] <- runif(maxiter, 0.301, 0.301)
return(list(coag=coag,
filt_nc=filt_nc,
filt_coag=filt_coag,
filt_inline=filt_inline,
filt_sand=filt_sand,
filt_micro=filt_micro,
filt_ultra=filt_ultra,
bio_filt=bio_filt,
uv=uv,
chlorine=chlorine,
chloromines=chloromines,
ozone=ozone,
chlorine_dioxide=chlorine_dioxide
)
)
}
source('./monte_carlo.r')
View(treatmentDist)
treatment <- treatmentDist(maxiter)
source("./qmra_utils.r")
source('./monte_carlo.r')
maxiter <- 1000
defaultData <- read.csv('default_MPN.csv', header=TRUE, col.names = c('x'))
cryptoData <- defaultData
giardiaData <- defaultData
rotaData <- defaultData
campyData <- defaultData
eColiData <- defaultData
getDataInput <- function(){
return(data.frame(
crypto = cryptoData$x,
giardia = giardiaData$x,
rota = rotaData$x,
campy = campyData$x,
eColi = eColiData$x
))
}
mean_crypto_final_Ill <- 2.693535e-08
mean_giardia_final_ill <- 5.255395e-11
mean_rota_final_ill <- 1.981222e-10
mean_campy_final_ill <-  5.061135e-17
mean_ecoli_final_ill <- 5.033174e-17
d <- getDataInput()
res <- qmra.MonteCarlo(d,
maxiter=maxiter,
disinfectName1='ozone',
disinfectName2 = 'uv',
disinfectName3 = 'chlorine',
ingest = list(min=0.5, mean=1, max=2.5),
efficiency = list(
coag=1,
disinfect1=1,
filt=1,
bioFilt=1,
disinfect2=1,
disinfect3=1
)
)
source('./monte_carlo.r')
maxiter <- 10000
defaultData <- read.csv('default_MPN.csv', header=TRUE, col.names = c('x'))
cryptoData <- defaultData
giardiaData <- defaultData
rotaData <- defaultData
campyData <- defaultData
eColiData <- defaultData
getDataInput <- function(){
return(data.frame(
crypto = cryptoData$x,
giardia = giardiaData$x,
rota = rotaData$x,
campy = campyData$x,
eColi = eColiData$x
))
}
mean_crypto_final_Ill <- 2.693535e-08
mean_giardia_final_ill <- 5.255395e-11
mean_rota_final_ill <- 1.981222e-10
mean_campy_final_ill <-  5.061135e-17
mean_ecoli_final_ill <- 5.033174e-17
d <- getDataInput()
res <- qmra.MonteCarlo(d,
maxiter=maxiter,
disinfectName1='ozone',
disinfectName2 = 'uv',
disinfectName3 = 'chlorine',
ingest = list(min=0.5, mean=1, max=2.5),
efficiency = list(
coag=1,
disinfect1=1,
filt=1,
bioFilt=1,
disinfect2=1,
disinfect3=1
)
)
shiny::runApp()
shiny::runApp()
source('./monte_carlo.r')
maxiter <- 10000
defaultData <- read.csv('default_MPN.csv', header=TRUE, col.names = c('x'))
cryptoData <- defaultData
giardiaData <- defaultData
rotaData <- defaultData
campyData <- defaultData
eColiData <- defaultData
getDataInput <- function(){
return(data.frame(
crypto = cryptoData$x,
giardia = giardiaData$x,
rota = rotaData$x,
campy = campyData$x,
eColi = eColiData$x
))
}
mean_crypto_final_Ill <- 2.693535e-08
mean_giardia_final_ill <- 5.255395e-11
mean_rota_final_ill <- 1.981222e-10
mean_campy_final_ill <-  5.061135e-17
mean_ecoli_final_ill <- 5.033174e-17
d <- getDataInput()
res <- qmra.MonteCarlo(d,
maxiter=maxiter,
disinfectName1='ozone',
disinfectName2 = 'uv',
disinfectName3 = 'chlorine',
ingest = list(min=0.5, mean=1, max=2.5),
efficiency = list(
coag=1,
disinfect1=1,
filt=1,
bioFilt=1,
disinfect2=1,
disinfect3=1
)
)
test_that('Illness mean values are very close',{
expect_equal(mean(res$riskMorb['crypto'], mean_crypto_final_Ill))
})
library(testthat)
test_that('Illness mean values are very close',{
expect_equal(mean(res$riskMorb['crypto'], mean_crypto_final_Ill))
})
expect_equal(mean(res$riskMorb['crypto']), mean_crypto_final_Ill))
res$riskMorb['crypto']
expect_equal(mean(res$riskMorb[,'crypto']), mean_crypto_final_Ill))
res$riskMorb
expect_equal(mean(res$riskMorb$crypto), mean_crypto_final_Ill))
test_that('Illness mean values are very close',{
expect_equal(mean(res$riskMorb$crypto), mean_crypto_final_Ill))
})
res$riskMorb$crypto
expect_equal(mean(res$riskMorb['crypto']), mean_crypto_final_Ill))
expect_equal(mean(res$riskMorb[,'crypto']), mean_crypto_final_Ill))
res$riskMorb[,'crypto']
mean(res$riskMorb[,'crypto'])
test_that('Illness mean values are very close',{
expect_equal(mean(res$riskMorb[,'crypto']), mean_crypto_final_Ill)
})
